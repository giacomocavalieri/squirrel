---
version: 1.2.5
title: query that needs more than a single helper function
file: ./test/squirrel_test.gleam
test_name: query_that_needs_more_than_a_single_helper_function_test
---
import gleam/dynamic/decode
import pog
import youid/uuid.{type Uuid}

/// A row you get from running the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This type definition was generated automatically using v-test of the
/// > [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub type QueryRow {
  QueryRow(gen_random_uuid: Uuid, date: pog.Date)
}

/// Runs the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This function was generated automatically using v-test of
/// > the [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub fn query(db) {
  let decoder = {
    use gen_random_uuid <- decode.field(0, uuid_decoder())
    use date <- decode.field(1, pog.date_decoder())
    decode.success(QueryRow(gen_random_uuid:, date:))
  }

  "select gen_random_uuid(), 'Jan-2-1970'::date"
  |> pog.query
  |> pog.returning(decoder)
  |> pog.execute(db)
}

// --- Encoding/decoding utils -------------------------------------------------

/// A decoder to decode `Uuid`s coming from a Postgres query.
///
fn uuid_decoder() {
  use bit_array <- decode.then(decode.bit_array)
  case uuid.from_bit_array(bit_array) {
    Ok(uuid) -> decode.success(uuid)
    Error(_) -> decode.failure(uuid.v7(), "Uuid")
  }
}
