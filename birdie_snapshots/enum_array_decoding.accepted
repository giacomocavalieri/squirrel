---
version: 1.2.3
title: enum array decoding
file: ./test/squirrel_test.gleam
test_name: enum_array_decoding_test
---
import decode/zero
import pog

/// A row you get from running the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This type definition was generated automatically using v-test of the
/// > [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub type QueryRow {
  QueryRow(res: List(SquirrelColour))
}

/// Runs the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This function was generated automatically using v-test of
/// > the [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub fn query(db) {
  let decoder = {
    use res <- zero.field(0, zero.list(squirrel_colour_decoder()))
    zero.success(QueryRow(res:))
  }

  let query = "select array['red'::squirrel_colour] as res"

  pog.query(query)
  |> pog.returning(zero.run(_, decoder))
  |> pog.execute(db)
}

// --- Enums -------------------------------------------------------------------

/// Corresponds to the Postgres `squirrel_colour` enum.
///
/// > 🐿️ This type definition was generated automatically using v-test of the
/// > [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub type SquirrelColour {
  LightBrown
  Grey
  Red
}

fn squirrel_colour_decoder() {
  use variant <- zero.then(zero.string)
  case variant {
    "light brown" -> zero.success(LightBrown)
    "grey" -> zero.success(Grey)
    "red" -> zero.success(Red)
    _ -> zero.failure(LightBrown, "SquirrelColour")
  }
}
