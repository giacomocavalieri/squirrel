---
version: 1.3.0
title: left join nullability inference
file: ./test/squirrel_test.gleam
test_name: left_join_nullability_inference_test
---
import gleam/dynamic/decode
import gleam/option.{type Option}
import pog

/// A row you get from running the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This type definition was generated automatically using v-test of the
/// > [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub type QueryRow {
  QueryRow(user_id: Int, roles: Option(String))
}

/// Runs the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This function was generated automatically using v-test of
/// > the [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub fn query(db) {
  let decoder = {
    use user_id <- decode.field(0, decode.int)
    use roles <- decode.field(1, decode.optional(decode.string))
    decode.success(QueryRow(user_id:, roles:))
  }

  "
select
  users_issue41.user_id,
  profile_issue41.roles
from
  users_issue41
  left join profile_issue41
    on profile_issue41.user_id = users_issue41.user_id;
"
  |> pog.query
  |> pog.returning(decoder)
  |> pog.execute(db)
}
