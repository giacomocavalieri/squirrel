---
version: 1.2.1
title: uuid decoding
file: ./test/squirrel_test.gleam
test_name: uuid_decoding_test
---
import decode/zero
import gleam/pgo
import youid/uuid.{type Uuid}

/// A row you get from running the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This type definition was generated automatically using v-test of the
/// > [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub type QueryRow {
  QueryRow(res: Uuid)
}

/// Runs the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This function was generated automatically using v-test of
/// > the [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub fn query(db) {
  let decoder = {
    use res <- zero.field(0, uuid_decoder())
    zero.success(QueryRow(res:))
  }

  "select gen_random_uuid() as res"
  |> pgo.execute(db, [], zero.run(_, decoder))
}


// --- UTILS -------------------------------------------------------------------

/// A decoder to decode `Uuid`s coming from a Postgres query.
///
fn uuid_decoder() {
  use bit_array <- zero.then(zero.bit_array)
  case uuid.from_bit_array(bit_array) {
    Ok(uuid) -> zero.success(uuid)
    Error(_) -> zero.failure(uuid.v7(), "uuid")
  }
}
