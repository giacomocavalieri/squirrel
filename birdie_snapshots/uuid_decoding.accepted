---
version: 1.3.2
title: uuid decoding
file: ./test/squirrel_test.gleam
test_name: uuid_decoding_test
---

import gleam/dynamic/decode
import pog
import youid/uuid.{type Uuid}

pub type QueryRow {
  QueryRow(res: Uuid)
}

pub fn query(db) {
  let decoder = {
    use res <- decode.field(0, uuid_decoder())
    decode.success(QueryRow(res:))
  }

  "select gen_random_uuid() as res"
  |> pog.query
  |> pog.returning(decoder)
  |> pog.execute(db)
}


fn uuid_decoder() {
  use bit_array <- decode.then(decode.bit_array)
  case uuid.from_bit_array(bit_array) {
    Ok(uuid) -> decode.success(uuid)
    Error(_) -> decode.failure(uuid.v7(), "Uuid")
  }
}
