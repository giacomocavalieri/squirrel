---
version: 1.4.0
title: using uuids more than once results in a single uuid decoder helper
file: ./test/squirrel_test.gleam
test_name: using_uuids_more_than_once_results_in_a_single_uuid_decoder_helper_test
---

import gleam/dynamic/decode
import pog.{type Connection}
import youid/uuid.{type Uuid}

pub type OneRow {
  OneRow(gen_random_uuid: Uuid)
}

pub fn one(db: Connection) {
  let decoder = {
    use gen_random_uuid <- decode.field(0, uuid_decoder())
    decode.success(OneRow(gen_random_uuid:))
  }

  "select gen_random_uuid()"
  |> pog.query
  |> pog.returning(decoder)
  |> pog.execute(db)
}

pub type OtherRow {
  OtherRow(gen_random_uuid: Uuid)
}

pub fn other(db: Connection) {
  let decoder = {
    use gen_random_uuid <- decode.field(0, uuid_decoder())
    decode.success(OtherRow(gen_random_uuid:))
  }

  "select gen_random_uuid()"
  |> pog.query
  |> pog.returning(decoder)
  |> pog.execute(db)
}


fn uuid_decoder() {
  use bit_array <- decode.then(decode.bit_array)
  case uuid.from_bit_array(bit_array) {
    Ok(uuid) -> decode.success(uuid)
    Error(_) -> decode.failure(uuid.v7(), "Uuid")
  }
}

