---
version: 1.3.0
title: query that needs utils and enums has two sections
file: ./test/squirrel_test.gleam
test_name: query_that_needs_utils_and_enums_has_two_sections_test
---
import gleam/dynamic/decode
import pog

/// A row you get from running the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This type definition was generated automatically using v-test of the
/// > [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub type QueryRow {
  QueryRow(squirrel_colour: SquirrelColour, date: pog.Date)
}

/// Runs the `query` query
/// defined in `query.sql`.
///
/// > 🐿️ This function was generated automatically using v-test of
/// > the [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub fn query(db) {
  let decoder = {
    use squirrel_colour <- decode.field(0, squirrel_colour_decoder())
    use date <- decode.field(1, pog.date_decoder())
    decode.success(QueryRow(squirrel_colour:, date:))
  }

  "select 'red'::squirrel_colour, 'Jan-2-1970'::date"
  |> pog.query
  |> pog.returning(decoder)
  |> pog.execute(db)
}

// --- Enums -------------------------------------------------------------------

/// Corresponds to the Postgres `squirrel_colour` enum.
///
/// > 🐿️ This type definition was generated automatically using v-test of the
/// > [squirrel package](https://github.com/giacomocavalieri/squirrel).
///
pub type SquirrelColour {
  LightBrown
  Grey
  Red
}

fn squirrel_colour_decoder() {
  use squirrel_colour <- decode.then(decode.string)
  case squirrel_colour {
    "light brown" -> decode.success(LightBrown)
    "grey" -> decode.success(Grey)
    "red" -> decode.success(Red)
    _ -> decode.failure(LightBrown, "SquirrelColour")
  }
}
