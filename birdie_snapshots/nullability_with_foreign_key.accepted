---
version: 1.4.0
title: nullability with foreign key
file: ./test/squirrel_test.gleam
test_name: nullability_with_foreign_key_condition_test
---

import gleam/dynamic/decode
import gleam/option.{type Option}
import pog.{type Connection}

pub type QueryRow {
  QueryRow(item_id: Int, name: Option(String))
}

pub fn query(db: Connection, arg_1: Int) {
  let decoder = {
    use item_id <- decode.field(0, decode.int)
    use name <- decode.field(1, decode.optional(decode.string))
    decode.success(QueryRow(item_id:, name:))
  }

  "
select
  item_issue43.item_id,
  category_issue43.name
from
  item_issue43
  left join category_issue43 using(category_id)
where
  item_issue43.site_id = $1;
"
  |> pog.query
  |> pog.parameter(pog.int(arg_1))
  |> pog.returning(decoder)
  |> pog.execute(db)
}

